<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Panel</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <style>
      :root {
        --mcd-yellow: #ffc72c;
        --mcd-red: #db0007;
      }
      .btn-yellow { background-color: var(--mcd-yellow); border-color: var(--mcd-yellow); color: #333; }
      .btn-red { background-color: var(--mcd-red); border-color: var(--mcd-red); color: white; }
      body { background-color: #f8f9fa; }

      /* New class to blur the background */
      .is-blurred {
        filter: blur(4px);
        pointer-events: none;
        transition: filter 0.3s ease-out;
      }
      
      .main-content {
        transition: filter 0.3s ease-out;
      }

      /* Popup styles */
      .popup {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        transition: opacity 0.3s ease;
      }
    </style>
</head>
<body>

  <div class="popup" id="loginPopup">
    <div class="card" style="min-width: 350px;">
      <div class="card-body">
        <h2 class="mb-4 text-center">Login</h2>
        <form id="loginForm" onsubmit="return ProcessLogin(event)">
          <div class="mb-3"><label for="popupNaam" class="form-label">Naam</label><input type="text" class="form-control" id="popupNaam" required></div>
          <div class="mb-3"><label for="popupWachtwoord" class="form-label">Wachtwoord</label><input type="password" class="form-control" id="popupWachtwoord" required></div>
          <div class="d-grid"><button class="btn btn-yellow" type="submit">Login</button></div>
        </form>
      </div>
    </div>
  </div>

  <div id="main-app-container">
    <div class="container-fluid">
      <main class="main-content p-4">
        
        <h2>Edit Items</h2>
        <hr/>
        <% if (items.length > 0) { %>
          <div class="row">
            <% items.forEach(item => { %>
              <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                <div class="card h-100">
                  <img src="<%= item.image %>" class="card-img-top" style="height: 200px; object-fit: cover;" alt="<%= item.item %>" />
                  <div class="card-body d-flex flex-column">
                    <h5 class="card-title"><%= item.item %></h5>
                    <p class="card-text">Price: $<%= item.price %></p>
                    <p class="card-text flex-grow-1"><%= item.description %></p>
                    <button class="btn btn-yellow edit-item-btn mt-auto" data-item-id="<%= item.id %>" data-item-name="<%= item.item %>" data-item-price="<%= item.price %>" data-item-description="<%= item.description %>" data-item-image="<%= item.image %>">Edit</button>
                  </div>
                </div>
              </div>
            <% }) %>
          </div>
        <% } else { %>
          <p>No items available to edit.</p>
        <% } %>

        <h2 class="mt-5">Add New Item</h2>
        <hr/>
        <div class="card">
          <div class="card-body">
            <form id="addItemForm">
              <div class="mb-3"><label for="itemName" class="form-label">Item Name</label><input type="text" class="form-control" id="itemName" name="name" required /></div>
              <div class="mb-3"><label for="itemPrice" class="form-label">Price</label><input type="number" step="0.01" class="form-control" id="itemPrice" name="price" required /></div>
              <div class="mb-3"><label for="itemDescription" class="form-label">Description</label><textarea class="form-control" id="itemDescription" name="description" rows="3" required></textarea></div>
              <div class="mb-3"><label for="itemImage" class="form-label">Image URL</label><input type="url" class="form-control" id="itemImage" name="image" required /></div>
              <button class="btn btn-yellow" type="submit">Add Item</button>
            </form>
          </div>
        </div>
      </main>
    </div>
  </div>

  <div class="popup d-none" id="editItemPopup">
    <div class="card" style="min-width: 350px;">
      <div class="card-body">
        <h2 class="mb-4 text-center">Edit Item</h2>
        <form id="editItemForm">
          <div class="mb-3"><label for="editItemName" class="form-label">Item Name</label><input type="text" class="form-control" id="editItemName" name="name" required></div>
          <div class="mb-3"><label for="editItemPrice" class="form-label">Price</label><input type="number" step="0.01" class="form-control" id="editItemPrice" name="price" required></div>
          <div class="mb-3"><label for="editItemDescription" class="form-label">Description</label><textarea class="form-control" id="editItemDescription" name="description" rows="3" required></textarea></div>
          <div class="mb-3"><label for="editItemImage" class="form-label">Image URL</label><input type="url" class="form-control" id="editItemImage" name="image" required /></div>
          <div class="d-grid"><button class="btn btn-yellow" type="submit">Save Changes</button></div>
          <div class="d-grid mt-2"><button class="btn btn-secondary" type="button" id="cancelEditItem">Cancel</button></div>
        </form>
      </div>
    </div>
  </div>



<script>
    const LOGIN_NAAM = "<%= LOGIN_NAAM %>";
    const LOGIN_WACHTWOORD = "<%= LOGIN_WACHTWOORD %>";
    const mainContainer = document.getElementById('main-app-container');

    // Initially hide main container and blur it for the login
    mainContainer.style.display = 'none';
    mainContainer.classList.add('is-blurred');

    function ProcessLogin(event) {
        event.preventDefault();
        const naam = document.getElementById('popupNaam').value;
        const wachtwoord = document.getElementById('popupWachtwoord').value;

        if (naam === LOGIN_NAAM && wachtwoord === LOGIN_WACHTWOORD) {
            document.getElementById('loginPopup').style.display = 'none';
            mainContainer.style.display = 'block';
            mainContainer.classList.remove('is-blurred'); // Un-blur on login
        } else {
            alert('Invalid credentials.');
        }
        return false;
    }

    document.addEventListener('DOMContentLoaded', function () {
        const editPopup = document.getElementById('editItemPopup');
        const editForm = document.getElementById('editItemForm');
        
        // --- Popup Blur Logic ---
        function showEditPopup() {
            editPopup.classList.remove('d-none');
            mainContainer.classList.add('is-blurred');
        }
        function hideEditPopup() {
            editPopup.classList.add('d-none');
            mainContainer.classList.remove('is-blurred');
        }

        // --- Edit Item Logic ---
        document.querySelectorAll('.edit-item-btn').forEach(button => {
            button.addEventListener('click', () => {
                editForm.setAttribute('data-current-item-id', button.dataset.itemId);
                document.getElementById('editItemName').value = button.dataset.itemName;
                document.getElementById('editItemPrice').value = button.dataset.itemPrice;
                document.getElementById('editItemDescription').value = button.dataset.itemDescription;
                document.getElementById('editItemImage').value = button.dataset.itemImage;
                showEditPopup();
            });
        });

        document.getElementById('cancelEditItem').addEventListener('click', hideEditPopup);

        editForm.addEventListener('submit', async function (event) {
            event.preventDefault();
            const itemId = editForm.getAttribute('data-current-item-id');
            const data = Object.fromEntries(new FormData(editForm));

            const response = await fetch(`/item/${itemId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });
            if (response.ok) {
                location.reload();
            } else {
                alert('Failed to update item.');
            }
        });

        // --- Add New Item Logic ---
        const addItemForm = document.getElementById('addItemForm');
        addItemForm.addEventListener('submit', async function(event) {
            event.preventDefault();
            const data = Object.fromEntries(new FormData(addItemForm));

            const response = await fetch('/item', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });

            if(response.ok) {
                alert('Item added successfully!');
                location.reload();
            } else {
                alert('Failed to add item.');
            }
        });
    });
</script>
</body>
</html>